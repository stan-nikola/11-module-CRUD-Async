{"mappings":"AAKA,SAASA,SAASC,GAChB,MAAMC,EAAS,CACbC,WAAY,KACTC,KAAG,MACHC,MAAI,MAGT,OAAO,IAAIC,SAAQ,CAACC,EAASC,IAC3BC,YAAW,IAAMF,EAAQL,EAAOD,KAAQ,M,CAI5CS,eAAeC,gBACb,IACEC,QAAQC,KAAK,iBACb,MAAMR,EAAQL,SAAS,SACjBI,EAAOJ,SAAS,QAChBc,EAAQd,SAAS,cAEjBE,QAAeI,QAAQS,IAAI,CAACV,EAAOD,EAAMU,IAI/C,OAHAF,QAAQI,IAAId,GACZU,QAAQK,QAAQ,iBAETf,C,CACP,MAAOgB,GACPN,QAAQI,IAAI,S,EAIhBL","sources":["src/js/03-async.js"],"sourcesContent":["// Синтаксис async/await\n// Последовательные операции\n// Паралельные операции с Promise.all()\n// try...catch\n\nfunction getFruit(name) {\n  const fruits = {\n    strawberry: '🍓',\n    kiwi: '🥝 ',\n    apple: '🍎',\n  };\n\n  return new Promise((resolve, reject) =>\n    setTimeout(() => resolve(fruits[name]), 500),\n  );\n}\n\nasync function aMakeSmoothie() {\n  try {\n    console.time('aMakeSmoothie');\n    const apple = getFruit('apple');\n    const kiwi = getFruit('kiwi');\n    const berry = getFruit('strawberry');\n\n    const fruits = await Promise.all([apple, kiwi, berry]);\n    console.log(fruits);\n    console.timeEnd('aMakeSmoothie');\n\n    return fruits;\n  } catch (error) {\n    console.log('Ошибка');\n  }\n}\n\naMakeSmoothie();\n\n// async function fn () {}\n\n// const fn  = async function () {}\n\n// const arr = async () => {}\n\n// const x = {\n//   async getname () {}\n// }\n\n// class X {\n//   async getName () {}\n// }\n"],"names":["getFruit","name","fruits","strawberry","kiwi","apple","Promise","resolve","reject","setTimeout","async","aMakeSmoothie","console","time","berry","all","log","timeEnd","error"],"version":3,"file":"03-async.15d93971.js.map"}